# POSSIBLE GITLAB SETUP

before_script:
  - DEBIAN_FRONTEND=noninteractive apt-get -qq update && \
    DEBIAN_FRONTEND=noninteractive apt-get -qq install \
      ansible \
      aptitude \
      apt-transport-https \
      build-essential \
      ca-certificates \
      curl \
      git \
      iptables \
      libssl-dev \
      python3-setuptools \
      python3-dev \
      python3-pip \
      software-properties-common

stages:
  - build
  - deploy
  - test

Containernet Build:
  stage: build
  script:
    - echo "Installing Containernet...\n"
    - git clone https://github.com/containernet/containernet.git
    - sudo ansible-playbook -i "localhost," -c local containernet/ansible/install.yml
  dependencies:
    - "Build Docker images"
  tags:
    - containernet

Dora Build:
  stage: build 
  script:
    - echo "Building Dora binary...\n"
    - git clone https://github.com/bluecatengineering/dora
    - mkdir dora/ansible
    - mv $HOME/dora_install,yml $HOME/dora/ansible/dora_install.yml
    - sudo ansible-playbook -i "localhost," -c local dora/ansible/dora_install.yml
  dependencies:
    - "Build Docker images"
  tags:
    - dora

Build Docker images:
  stage: build
  script:
    - echo "Building Docker images...\n"
    - containernet/examples/example-containers/build.sh

# Containernet runner will hold containernet CLI open
Start Containernet:
  stage: deploy
  script:
    - echo "Starting Containernet...\n"
    - mkdir containernet/config
    - mv test.py containernet/config/test.py
    - sudo python3 containernet/config/test.py
  dependencies:
    - "Build Docker images"
  tags:
    - containernet

Start Dora:
  stage: deploy
  script:
    - echo "Starting Dora on container "mn.d1""
    - sudo docker exec mn.d1 mkdir /var/lib/dora
    - sudo docker exec mn.d1 mv dora/config/test.yml /var/lib/dora
    - sudo docker exec mn.d1 DORA_LOG="debug" dora/target/debug/dora -c dora/config/test.yaml -d dora/h1.db
  tags:
    - dora
